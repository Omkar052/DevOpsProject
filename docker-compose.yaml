version: '3.8'
services:
  frontend:
    build:
      context: ./applications/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    networks:
      - ecommerce-net

  api-gateway:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - product-service
      - user-service
      - order-service
      - cart-service
    networks:
      - ecommerce-net

  product-service:
    build:
      context: ./applications/product-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/products
      - PORT=3001
    depends_on:
      - postgres
    networks:
      - ecommerce-net

  user-service:
    build:
      context: ./applications/user-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/users
      - PORT=3002
    depends_on:
      - postgres
    networks:
      - ecommerce-net

  order-service:
    build:
      context: ./applications/order-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/orders
      - PORT=3003
    depends_on:
      - postgres
    networks:
      - ecommerce-net

  cart-service:
    build:
      context: ./applications/cart-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=3004
    depends_on:
      - redis
    networks:
      - ecommerce-net

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=products,users,orders
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ecommerce-net

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ecommerce-net

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ecommerce-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ecommerce-net

volumes:
  postgres-data:
  redis-data:
  grafana-data:


networks:
  ecommerce-net:
    driver: bridge
